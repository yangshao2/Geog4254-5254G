install.packages('rgdal')
install.packages('raster')
library(rgdal)
library(raster)
install.packages('caret')
library(caret)
quit()
ls
ls()
quit()
library('GISTools')
install.packages('GISTools')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='binary')
install.packages("~/Downloads/GISTools_0.7-1-3.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1-3.tar", repos = NULL,type='binary')
library('GISTools')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
Rversion
rversion
R.version
install.packages('GISTools')
R.version
install.packages('GISTools')
R.version
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='binary')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
library('GISTools')
q()
install.packages("tidyverse")
library(tidyverse)
data()
data()
view(mpg)
names(mpg)
summary(mpg)
view(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
+
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(mpg,aes(dipl,hwy))+
geom_point()
ggplot(mpg,aes(dipl,hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=1,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw(base_size = 11)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='mpg plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtile('MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')
theme_bw(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(plot.title = element_text(hjust = 0.5))+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw(plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
ggtitle('MPG plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
ggtitle('MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
title('MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')
theme_bw(base_size = 30)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')+
theme_bw(base_size = 30)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')+
theme_bw(base_size = 20)
library(rspatial)
install.packages('rspatial')
remotes::install_github('rspatial/rspatial')
library(rspatial)
p<-sp_data('preciipitation.csv')
cts<-sp_data('counties.rds')
p<-sp_data('precipitation.csv')
p
head(p)
plot(cts)
points(p[,c('LONG','LAT')])
class(p)
class(cts)
p$pan<-rowSums(p[,6:17])
plot(p$pan)
m<-lm(pan~ALT,data=p)
summary(m)
library(sf)
pt <- st_point(c(0,1))
plot(pt)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))
plot(pol)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,1), c(0,0))))
plot(pol)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,1), c(0,0.5))))
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,0.5), c(0,0))))
plot(pol)
typeof(pol)
class(pol)
class(point)
class(pt)
typeof(pt)
library(sf)
# Define longitude and latitude
lon <- 0  # Example longitude (for Greenwich, UK)
lat <- 51.5  # Example latitude (for Greenwich, UK)
# Create a point feature
point <- st_point(c(lon, lat))  # Create the point
# Convert to a simple feature object
point_sf <- st_sf(geometry = st_sfc(point))
# Print the point feature
print(point_sf)
# If you want the point to be in a specific Coordinate Reference System (CRS), you can set it using:
point_sf <- st_set_crs(point_sf, 4326)  # 4326 is the EPSG code for WGS 84
library(mapview)
mapview(point_sf)
point
print(point_sf)
plot(cars)
install.packages('plotly')
install.packages('ggplot2')
setwd("~/work/Geog4254-5254G")
setwd("~/work/Geog4254-5254G/week4")
knitr::opts_chunk$set(echo = FALSE)
library(sf)
library(tmap)
# Load the shapefile
income_va <- st_read("income.shp")
# qtm is good for data exploration, simple maps only
qtm(income_va, fill='income')
library(sf)
library(tmap)
# Load the shapefile
income_va <- st_read("income.shp")
# qtm is good for data exploration, simple maps only
qtm(income_va, fill='income')
tm_shape(income_va)+
tm_polygons("income",palette = c("yellow", "darkgreen"))+
tm_layout(title='Income for VA',legend.text.size = 0.5)
tm_shape(income_va)+
tm_polygons("income",palette=c('yellow','darkgreen'))+
tm_layout(title='Income for VA',
title.position=c("center","top"),
legend.text.size = 0.5,
legend.position=c("left","top"))+
tm_scale_bar(breaks = c(0, 10,20), text.size = 0.5, position=c("right", "bottom"))+
tm_compass(type = "4star", size = 3, position = c("right", "top"))
tm_shape(income_va)+
tm_polygons("income",palette=c('yellow','darkgreen'))+
tm_layout(title='Income for VA',
title.position=c("center","top"),
legend.text.size = 0.5,
legend.position=c("left","top"))+
tm_scale_bar(breaks = c(0, 20,40), text.size = 0.5, position=c("right", "bottom"))+
tm_compass(type = "4star", size = 3, position = c("right", "top"))
tm_shape(income_va)+
tm_symbols("income")+
tm_layout(title='Income for VA',legend.text.size = 0.5)
tm_shape(income_va) +
tm_polygons("income", style = "jenks",n=7) +
tm_layout(title = "Income with Natural Breaks")
library(sf)
library(tmap)
# Load the shapefile
income_va <- st_read("income.shp")
# qtm is good for data exploration, simple maps only
qtm(income_va, fill='income')
tm_shape(income_va)+
tm_polygons("income",palette = c("yellow", "darkgreen"))+
tm_layout(title='Income for VA',legend.text.size = 1)
tm_shape(income_va)+
tm_polygons("income",palette = c("yellow", "darkgreen"))+
tm_layout(title='Income data for VA',legend.text.size = 1)
tm_shape(income_va)+
tm_polygons("income",palette=c('yellow','darkgreen'))+
tm_layout(title='Income for VA',
title.position=c("center","top"),
legend.text.size = 0.5,
legend.position=c("left","top"))+
tm_scale_bar(breaks = c(0, 40,80), text.size = 0.5, position=c("right", "bottom"))+
tm_compass(type = "4star", size = 3, position = c("right", "top"))
tm_shape(income_va)+
tm_symbols("income")+
tm_layout(title='Income for VA',legend.text.size = 0.5)
tm_shape(income_va) +
tm_polygons("income", style = "jenks",n=5) +
tm_layout(title = "Income with Natural Breaks")
library(terra)
dem<-rast('dem.tif')
tm_shape(dem) +
tm_raster(style = "cont", palette = "-RdYlGn")
nlcd<-rast('nlcd.tif')
# Define the palette and labels
pal4 <- c("blue", "red", "green", "yellow")
# Example colors, adjust as needed
labels <- c('water', 'urban', 'forest', 'ag')
# Create the map
tm_shape(nlcd) +
tm_raster(style = "cat", palette = pal4, labels = labels) +
tm_layout(legend.text.size = 0.8, legend.position = c("right", "bottom"))
tmap_mode("view")
tm_shape(income_va) +
tm_polygons("income", style = "jenks",n=5) +
tm_layout(title = "Income with Natural Breaks")
tmap_mode("view")
tm_shape(income_va) +
tm_polygons("income", style = "jenks",n=5) +
tm_layout(title = "Income with Natural Breaks")
tmap_mode("view")
tm_shape(income_va) +
tm_polygons("income", style = "jenks",n=5) +
tm_layout(title = "Income with Natural Breaks")
tmap_mode("view")
tm_shape(income_va) +
tm_polygons("income", style = "jenks",n=5) +
tm_layout(title = "Income with Natural Breaks")
tmap_mode("view")
tm_shape(income_va) +
tm_polygons("income", style = "jenks",n=7) +
tm_layout(title = "Income with Natural Breaks")
library(sf)
library(tmap)
# Load the shapefile
income_va <- st_read("income.shp")
# qtm is good for data exploration, simple maps only
qtm(income_va, fill='income')
tm_shape(income_va)+
tm_polygons("income",palette = c("yellow", "darkgreen"))+
tm_layout(title='Income data for VA',legend.text.size = 1)
library(terra)
dem<-rast('dem.tif')
tm_shape(dem) +
tm_raster(style = "cont", palette = "-RdYlGn")
tmap_mode("plot")
tm_shape(income_va) +
tm_polygons("income", style = "jenks",n=7) +
tm_layout(title = "Income with Natural Breaks")
library(terra)
dem<-rast('dem.tif')
tm_shape(dem) +
tm_raster(style = "cont", palette = "-RdYlGn")
