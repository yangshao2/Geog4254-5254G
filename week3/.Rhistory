install.packages('rgdal')
install.packages('raster')
library(rgdal)
library(raster)
install.packages('caret')
library(caret)
quit()
ls
ls()
quit()
library('GISTools')
install.packages('GISTools')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='binary')
install.packages("~/Downloads/GISTools_0.7-1-3.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1-3.tar", repos = NULL,type='binary')
library('GISTools')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
Rversion
rversion
R.version
install.packages('GISTools')
R.version
install.packages('GISTools')
R.version
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='binary')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
library('GISTools')
q()
install.packages("tidyverse")
library(tidyverse)
data()
data()
view(mpg)
names(mpg)
summary(mpg)
view(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
+
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(mpg,aes(dipl,hwy))+
geom_point()
ggplot(mpg,aes(dipl,hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=1,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw(base_size = 11)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='mpg plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtile('MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')
theme_bw(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(plot.title = element_text(hjust = 0.5))+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw(plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
ggtitle('MPG plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
ggtitle('MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
title('MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')
theme_bw(base_size = 30)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')+
theme_bw(base_size = 30)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')+
theme_bw(base_size = 20)
library(rspatial)
install.packages('rspatial')
remotes::install_github('rspatial/rspatial')
library(rspatial)
p<-sp_data('preciipitation.csv')
cts<-sp_data('counties.rds')
p<-sp_data('precipitation.csv')
p
head(p)
plot(cts)
points(p[,c('LONG','LAT')])
class(p)
class(cts)
p$pan<-rowSums(p[,6:17])
plot(p$pan)
m<-lm(pan~ALT,data=p)
summary(m)
library(sf)
pt <- st_point(c(0,1))
plot(pt)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))
plot(pol)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,1), c(0,0))))
plot(pol)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,1), c(0,0.5))))
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,0.5), c(0,0))))
plot(pol)
typeof(pol)
class(pol)
class(point)
class(pt)
typeof(pt)
library(sf)
# Define longitude and latitude
lon <- 0  # Example longitude (for Greenwich, UK)
lat <- 51.5  # Example latitude (for Greenwich, UK)
# Create a point feature
point <- st_point(c(lon, lat))  # Create the point
# Convert to a simple feature object
point_sf <- st_sf(geometry = st_sfc(point))
# Print the point feature
print(point_sf)
# If you want the point to be in a specific Coordinate Reference System (CRS), you can set it using:
point_sf <- st_set_crs(point_sf, 4326)  # 4326 is the EPSG code for WGS 84
library(mapview)
mapview(point_sf)
point
print(point_sf)
plot(cars)
install.packages('plotly')
install.packages('ggplot2')
knitr::opts_chunk$set(echo = FALSE)
# Summary of a specific attribute column
summary(pophu_withincounty$POP10)
setwd("~/work/Geog4254-5254G/week3")
list.files()
library(sf)
knitr::opts_chunk$set(echo = FALSE)
library(sf)
library(dplyr)
# Load the shapefile
watershed <- st_read("watershed.shp")
# Read the CSV file
agstats <- read.csv("agstats.csv")
# Assuming both data frames have a common key named "Subbasin"
joined_data <- watershed %>%
left_join(agstats, by = "Subbasin")
watershed$Subbasin
watershed$Subbasin<-as.numeric(watershed$Subbasin)
st_write(watershed,'watershed.shp',delete_dsn = T)
library(sf)
library(dplyr)
# Load the shapefile
watershed <- st_read("watershed.shp")
# Read the CSV file
agstats <- read.csv("agstats.csv")
# Assuming both data frames have a common key named "Subbasin"
joined_data <- watershed %>%
left_join(agstats, by = "Subbasin")
# Display the first few rows of the joined data
head(joined_data)
# Plot the joined data
plot(st_geometry(joined_data))
library(sf)
library(dplyr)
# Load the shapefile
watershed <- st_read("watershed.shp")
# Read the CSV file
agstats <- read.csv("agstats.csv")
# Assuming both data frames have a common key named "Subbasin"
joined_data <- watershed %>%
left_join(agstats, by = "Subbasin")
# Display the first few rows of the joined data
head(joined_data)
# Plot the joined data
plot(joined_data["Mean"])
library(sf)
library(dplyr)
# Load the shapefile
watershed <- st_read("watershed.shp")
# Read the CSV file
agstats <- read.csv("agstats.csv")
# Assuming both data frames have a common key named "Subbasin"
joined_data <- watershed %>%
left_join(agstats, by = "Subbasin")
# Display the first few rows of the joined data
head(joined_data)
# Plot the joined data
plot(joined_data["MEAN"])
elev <- st_read('stormsub.shp')
elev <- st_read('stormsub.shp')
plot(elev)
elev$V
mean(elev$V)
storm <- st_read('stormsub.shp')
plot(storm)
storm <- st_read('stormsub.shp')
plot(storm['V'])
storm_new <- storm[storm$V>1.6,]
plot(storm_new['V'])
storm_new <- storm[storm$V>1.9,]
plot(storm_new['V'])
storm_new <- storm[storm$V>1.6,]
plot(storm_new['V'])
library(terra)
dem<-rast('dem.tif')
stream<-st_read('stream.shp')
plot(dem)
plot(stream,add=T)
buffer_90m <- st_buffer(stream, dist = 90)
plot(dem)
plot(stream,add=T)
# Plot the buffer on top of the DEM and stream
plot(buffer_90m, add=TRUE, border='blue')
stream$Wid2
# Create varying size buffers based on stream$Wid2
buffers <- st_buffer(stream, dist = stream$Wid2)
plot(dem)
# Plot the buffers on top of the DEM and stream
plot(buffers, add=TRUE, border='red')
# Create varying size buffers based on stream$Wid2
buffers <- st_buffer(stream, dist = stream$Wid2 *2)
plot(dem)
# Plot the buffers on top of the DEM and stream
plot(buffers, add=TRUE, border='red')
# Create varying size buffers based on stream$Wid2
buffers <- st_buffer(stream, dist = stream$Wid2 *10)
plot(dem)
# Plot the buffers on top of the DEM and stream
plot(buffers, add=TRUE, border='red')
watershed$OBJECTID
head(watershed)
# Create a factor based on this attribute
watershed$ids <- as.factor(1)
# Use unionSpatialPolygons to merge polygons by the "ID" attribute
merged_watershed <- unionSpatialPolygons(watershed, ids)
# Create a factor based on this attribute
watershed$ids <- as.factor(1)
# Use unionSpatialPolygons to merge polygons by the "ID" attribute
merged_watershed <- st_union(watershed)
plot(merged_watershed)
plot(watershed)
# Use st_union to merge polygons by the "ID" attribute
merged_watershed <- st_union(watershed)
plot(merged_watershed)
plot(st_geometry(watershed))
# Use st_union to merge polygons by the "ID" attribute
merged_watershed <- st_union(watershed)
plot(merged_watershed)
dem <-rast('dem.tif')
plot(dem)
watershed <- st_read('watershed.shp')
plot(watershed,add=T)
zonal_stats <- terra::extract(dem, watershed, fun = mean, na.rm = TRUE)
dem <-rast('dem.tif')
plot(dem)
watershed <- st_read('watershed.shp')
plot(st_geometry(watershed),add=T)
zonal_stats <- terra::extract(dem, watershed, fun = mean, na.rm = TRUE)
zonal_stats <- terra::extract(dem, watershed, fun = mean, na.rm = TRUE)
head(zonal_stats)
zonal_stats <- terra::extract(dem, watershed, fun = mean, na.rm = TRUE)
head(watershed)
head(zonal_stats)
pophu <- cbind(pophu, zonal_stats)
watershed_dem <- cbind(watershed, zonal_stats)
head(watershed_dem)
plot(watershed_dem['dem'])
