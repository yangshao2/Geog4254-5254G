install.packages('rgdal')
install.packages('raster')
library(rgdal)
library(raster)
install.packages('caret')
library(caret)
quit()
ls
ls()
quit()
library('GISTools')
install.packages('GISTools')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='binary')
install.packages("~/Downloads/GISTools_0.7-1-3.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1-3.tar", repos = NULL,type='binary')
library('GISTools')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
Rversion
rversion
R.version
install.packages('GISTools')
R.version
install.packages('GISTools')
R.version
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='binary')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
library('GISTools')
q()
install.packages("tidyverse")
library(tidyverse)
data()
data()
view(mpg)
names(mpg)
summary(mpg)
view(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
+
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(mpg,aes(dipl,hwy))+
geom_point()
ggplot(mpg,aes(dipl,hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=1,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw(base_size = 11)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='mpg plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtile('MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')
theme_bw(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(plot.title = element_text(hjust = 0.5))+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw(plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
ggtitle('MPG plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
ggtitle('MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
title('MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')
theme_bw(base_size = 30)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')+
theme_bw(base_size = 30)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')+
theme_bw(base_size = 20)
library(rspatial)
install.packages('rspatial')
remotes::install_github('rspatial/rspatial')
library(rspatial)
p<-sp_data('preciipitation.csv')
cts<-sp_data('counties.rds')
p<-sp_data('precipitation.csv')
p
head(p)
plot(cts)
points(p[,c('LONG','LAT')])
class(p)
class(cts)
p$pan<-rowSums(p[,6:17])
plot(p$pan)
m<-lm(pan~ALT,data=p)
summary(m)
library(sf)
pt <- st_point(c(0,1))
plot(pt)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))
plot(pol)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,1), c(0,0))))
plot(pol)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,1), c(0,0.5))))
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,0.5), c(0,0))))
plot(pol)
typeof(pol)
class(pol)
class(point)
class(pt)
typeof(pt)
library(sf)
# Define longitude and latitude
lon <- 0  # Example longitude (for Greenwich, UK)
lat <- 51.5  # Example latitude (for Greenwich, UK)
# Create a point feature
point <- st_point(c(lon, lat))  # Create the point
# Convert to a simple feature object
point_sf <- st_sf(geometry = st_sfc(point))
# Print the point feature
print(point_sf)
# If you want the point to be in a specific Coordinate Reference System (CRS), you can set it using:
point_sf <- st_set_crs(point_sf, 4326)  # 4326 is the EPSG code for WGS 84
library(mapview)
mapview(point_sf)
point
print(point_sf)
plot(cars)
install.packages('plotly')
install.packages('ggplot2')
library(sf)
a<-st_read('y2010_51_pophu.shp')
setwd("~/work/Geog4254-5254G/lab1")
a<-st_read('y2010_51_pophu.shp')
u<-a[, c("HOUSING10", "POP10")]
head(u)
a[1:5,]
a[,1:5]
summary(a)
head(a)
pophu_sub <- select(pophu, name_long, pop)
library(dplyr)
library(sf)
library(terra)
library(dplyr)
pophu_sub<-select(pophu,POP10,HOUSING10)
pophu_sub<-select(a,POP10,HOUSING10)
head(pophu_sub)
pophu_sub <- a %>% select(POP10)
head(pophu_sub)
a %>% select(STATEFP10,HOUSING10)
a<-filter(pophu_sub,POP10>10&POP10<50)
plot(a)
pophu <- st_read('y2010_51_pophu.shp')
a<-pophu %>%
select(POP10,HOUSING10) %>%
filter(POP10>500)
plot(a$HOUSING10,a$POP10)
a<-pophu %>%
select(POP10,HOUSING10) %>%
filter(POP10>500)
plot(a$HOUSING10,a$POP10)
a<-pophu %>%
select(POP10,HOUSING10) %>%
filter(POP10>500)
plot(a$HOUSING10,a$POP10)
a<-pophu %>%
select(POP10,HOUSING10) %>%
filter(POP10<2000)
plot(a$HOUSING10,a$POP10)
nlcd <- rast('nlcd.tif')
nlcd
nlcd <- rast('nlcd.tif')
nlcd
plot(nlcd)
freq(nlcd)
# Assign the value -1 to forest cover pixels (41, 42, 43)
nlcd[nlcd >= 41 & nlcd <= 43] <- 1
# Set all other values to 0
nlcd[nlcd != 1] <- 0
plot(nlcd)
library(sf)
library(terra)
library(dplyr)
pophu<-st_read('y2010_51_pophu.shp')
pophu<-st_read('y2010_51_pophu.shp')
plot(pophu["POP10"])
st_crs(pophu)
areas <- st_area(pophu)
areas
areas[1]
pophu$BLOCKID10[1]
pophu$hd <- pophu$HOUSING10/areas
hist(pophu$hd)
hist(pophu$hd,100)
hist(pophu$hd,breaks=100)
pophu$hd <- pophu$HOUSING10/areas
plot(pophu["hd"])
pophu$hd <- pophu$HOUSING10/areas
plot(pophu["hd"])
areas <- st_area(pophu)/1000000
pophu$hd <- pophu$HOUSING10/areas
plot(pophu["hd"])
pophu$hd <- pophu$HOUSING10/areas
a<-pophu[pophu$hd>6.17,]
pophu$hd
a<-pophu[pophu$hd>6.17,]
pophu$hd[1]
as.numeric(pophu$hd[1])
pophu$hd <- pophu$HOUSING10/areas
# Initial results for pophu$hd has specific units. Convert 'pophu$hd' to numeric values
pophu$hd_numeric <- as.numeric(pophu$hd)
a<-pophu[pophu$hd>6.17,]
pophu$hd <- pophu$HOUSING10/areas
# Initial results for pophu$hd has specific units. Convert 'pophu$hd' to numeric values
pophu$hd <- as.numeric(pophu$hd)
a<-pophu[pophu$hd>6.17,]
plot(a)
pophu$hd <- pophu$HOUSING10/areas
# Initial results for pophu$hd has specific units. Convert 'pophu$hd' to numeric values
pophu$hd <- as.numeric(pophu$hd)
a<-pophu[pophu$hd>6.17,]
plot(a["hd"])
nlcd<-raster('nlcd.tif')
nlcd<-rast('nlcd.tif')
plot(nlcd)
nlcd
nlcd<-rast('nlcd.tif')
nlcd[nlcd>=41&nlcd<=43]<-1
nlcd[nlcd!=1]<-0
plot(nlcd)
nlcd[nlcd>=41&nlcd<=43]<-1
nlcd[nlcd!=1]<-0
plot(nlcd)
# Calculate the mean value of the raster for each polygon
zonal_stats <- terra::extract(nlcd, pophu, fun = mean, na.rm = TRUE)
zonal_stats
zonal_stats[1]
pophu <- project(pophu, crs(nlcd))
pophu <- st_transform(pophu, crs(nlcd))
# Calculate the mean value of the raster for each polygon
zonal_stats1 <- terra::extract(nlcd, pophu, fun = mean, na.rm = TRUE)
plot(zonal_stats[,2],zonal_stats1[,2])
st_crs(pophu)
dim(zonal_stats
)
dim(pophu)
pophu <- cbind(pophu, zonal_stats)
head(zonal_stats)
wui<-pophu[pophu$nlcd>0.5&pophu$hd>6.17,]
plot(wui)
wui<-pophu[pophu$nlcd>0.5&pophu$hd>6.17,]
plot(wui)
