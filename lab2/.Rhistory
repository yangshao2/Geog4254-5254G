install.packages('rgdal')
install.packages('raster')
library(rgdal)
library(raster)
install.packages('caret')
library(caret)
quit()
ls
ls()
quit()
library('GISTools')
install.packages('GISTools')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='binary')
install.packages("~/Downloads/GISTools_0.7-1-3.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1-3.tar", repos = NULL,type='binary')
library('GISTools')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
Rversion
rversion
R.version
install.packages('GISTools')
R.version
install.packages('GISTools')
R.version
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='binary')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL)
install.packages("~/Downloads/GISTools_0.7-1.tar", repos = NULL,type='source')
library('GISTools')
q()
install.packages("tidyverse")
library(tidyverse)
data()
data()
view(mpg)
names(mpg)
summary(mpg)
view(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
+
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(mpg,aes(dipl,hwy))+
geom_point()
ggplot(mpg,aes(dipl,hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))+
geom_point()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=1,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw(base_size = 11)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='red')+
labs(title='mpg plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='mpg plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(title='MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtile('MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot',theme(plot.title = element_text(hjust = 0.5)))+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')
theme_bw(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(base_size = 20,plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme(plot.title = element_text(hjust = 0.5))+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw(plot.title = element_text(hjust = 0.5))
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
ggtitle('MPG plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
ggtitle('MPG plot')+
theme_bw()
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
ggtitle('MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency')
title('MPG plot')+
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')
theme_bw(base_size = 20)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')
theme_bw(base_size = 30)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')+
theme_bw(base_size = 30)
ggplot(mpg,aes(displ,hwy))+
geom_point(size=3,color='blue')+
labs(x='Engine Size',y='Fuel efficiency',title='MPG Plot')+
theme_bw(base_size = 20)
library(rspatial)
install.packages('rspatial')
remotes::install_github('rspatial/rspatial')
library(rspatial)
p<-sp_data('preciipitation.csv')
cts<-sp_data('counties.rds')
p<-sp_data('precipitation.csv')
p
head(p)
plot(cts)
points(p[,c('LONG','LAT')])
class(p)
class(cts)
p$pan<-rowSums(p[,6:17])
plot(p$pan)
m<-lm(pan~ALT,data=p)
summary(m)
library(sf)
pt <- st_point(c(0,1))
plot(pt)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))
plot(pol)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,1), c(0,0))))
plot(pol)
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,1), c(0,0.5))))
pol <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,2), c(0,0.5), c(0,0))))
plot(pol)
typeof(pol)
class(pol)
class(point)
class(pt)
typeof(pt)
library(sf)
# Define longitude and latitude
lon <- 0  # Example longitude (for Greenwich, UK)
lat <- 51.5  # Example latitude (for Greenwich, UK)
# Create a point feature
point <- st_point(c(lon, lat))  # Create the point
# Convert to a simple feature object
point_sf <- st_sf(geometry = st_sfc(point))
# Print the point feature
print(point_sf)
# If you want the point to be in a specific Coordinate Reference System (CRS), you can set it using:
point_sf <- st_set_crs(point_sf, 4326)  # 4326 is the EPSG code for WGS 84
library(mapview)
mapview(point_sf)
point
print(point_sf)
plot(cars)
install.packages('plotly')
install.packages('ggplot2')
setwd("~/work/jen")
library(tidycensus)
# Set your Census API key
census_api_key("e23a9a88f3a3911be51aed1a0e9c595a10e35b59")
# Specify the variables to download
variables <- c(
total_population = "B01003_001E",
median_household_income = "B19013_001E",
median_home_value = "B25077_001E",
median_gross_rent = "B25064_001E",
owner_occupied = "B25003_002E",
renter_occupied = "B25003_003E",
educational_attainment = "B15003_001E",
poverty_status = "B17001_002E",
employment_status = "B23025_002E"
)
# Download the data for all tracts in the USA
acs_data <- get_acs(
geography = "tract",
variables = variables,
year = 2022,
survey = "acs5",
geometry = FALSE,
output = "wide"
)
library(tidycensus)
# Set your Census API key
census_api_key("e23a9a88f3a3911be51aed1a0e9c595a10e35b59")
# Specify the variables to download
median_income <- get_acs(
geography = "tract",
variables = "B15003_001E",
year = 2020,
survey = "acs5",
geometry = FALSE,
output = "wide"
)
source("~/work/jen/get_acs_variables.R")
source("~/work/jen/get_acs_variables.R")
source("~/work/jen/get_acs_variables.R")
fips<-read.csv('https://github.com/yangshao2/floodimpact/raw/main/fips.csv')
fips
nrow(fips)
fips[1]
i<-1
fcode<- sprintf("%02d", fips$fips[i])
fcode
edu_data <- get_acs(
geography = "tract",
variables = c(
total = "B15003_001",
high_school = "B15003_017",
ged = "B15003_018",
some_college = "B15003_019",
associates = "B15003_020",
bachelors = "B15003_021",
masters = "B15003_022",
professional = "B15003_023",
doctorate = "B15003_024"
),
year = 2020,
survey = "acs5",
state=fcode,
geometry = FALSE,
output = "wide"
)
# Calculate the percentage with high school degree or higher
edu_data <- edu_data %>%
mutate(
high_school_or_higher = (B15003_017E + B15003_018E + B15003_019E + B15003_020E + B15003_021E + B15003_022E + B15003_023E + B15003_024E) / B15003_001E * 100
)
edu_data
edu_data <- get_acs(
geography = "tract",
variables = c(
total = "B15003_001",
high_school = "B15003_017",
ged = "B15003_018",
some_college = "B15003_019",
associates = "B15003_020",
bachelors = "B15003_021",
masters = "B15003_022",
professional = "B15003_023",
doctorate = "B15003_024"
),
year = 2020,
survey = "acs5",
state=fcode,
geometry = FALSE,
output = "wide"
)
edu_data
edu_data <- edu_data %>%
mutate(
pe = (high_school + ged + some_college + associates + bachelors + masters + professional + doctorate) / total * 100
)
# Calculate the percentage with high school degree or higher
edu_data <- edu_data %>%
mutate(
pe = (high_schoolE + gedE + some_collegeE + associatesE + bachelorsE + mastersE + professionalE + doctorateE) / totalE * 100
)
edu_data
edu_data$pe
mean(edu_data$pe)
u<-edu_data$pe
u<-na.omit(u)
u
mean(u)
max(u)
min(u)
head(edu_data)
outname<-paste0('edu',fcode,'.shp')
st_write(edu_data,outname)
library(sf)
outname<-paste0('edu',fcode,'.shp')
st_write(edu_data,outname)
source("~/work/jen/get_acs_variables.R")
fcode<- sprintf("%02d", fips$fips[i])
# Specify the variables to download (Educational attainment for the population 25 years and over)
edu_data <- get_acs(
geography = "tract",
variables = c(
total = "B15003_001",
high_school = "B15003_017",
ged = "B15003_018",
some_college1 = "B15003_019",
some_college2 = "B15003_020",
associates = "B15003_021",
bachelors = "B15003_022",
masters = "B15003_023",
professional = "B15003_024",
doctorate = "B15003_025",
),
year = 2020,
survey = "acs5",
state=fcode,
geometry = TRUE,
output = "wide"
)
fips<-read.csv('https://github.com/yangshao2/floodimpact/raw/main/fips.csv')
# Set your Census API key and install it for future sessions
census_api_key("e23a9a88f3a3911be51aed1a0e9c595a10e35b59", overwrite = T)
i<-1
fcode<- sprintf("%02d", fips$fips[i])
# Specify the variables to download (Educational attainment for the population 25 years and over)
edu_data <- get_acs(
geography = "tract",
variables = c(
total = "B15003_001",
high_school = "B15003_017",
ged = "B15003_018",
some_college1 = "B15003_019",
some_college2 = "B15003_020",
associates = "B15003_021",
bachelors = "B15003_022",
masters = "B15003_023",
professional = "B15003_024",
doctorate = "B15003_025",
),
year = 2020,
survey = "acs5",
state=fcode,
geometry = TRUE,
output = "wide"
)
edu_data <- get_acs(
geography = "tract",
variables = c(
total = "B15003_001",
high_school = "B15003_017",
ged = "B15003_018",
some_college1 = "B15003_019",
some_college2 = "B15003_020",
associates = "B15003_021",
bachelors = "B15003_022",
masters = "B15003_023",
professional = "B15003_024",
doctorate = "B15003_025"
),
year = 2020,
survey = "acs5",
state=fcode,
geometry = TRUE,
output = "wide"
)
head(edu_data)
edu_data <- edu_data %>%
mutate(
pe = (high_schoolE + gedE + some_college1E + some_college2E + associatesE + bachelorsE + mastersE + professionalE + doctorateE) / totalE * 100
)
outname<-paste0('edu',fcode,'.shp')
st_write(edu_data,outname)
st_write(edu_data,outname,append = FALSE)
edu_data$pe[edu_data$totalE==0]<-NA
outname<-paste0('edu',fcode,'.shp')
st_write(edu_data,outname,append = FALSE)
m<-edu_data$pe
m
i
outname<-paste0('edu',fcode,'.shp')
st_write(edu_data,outname,append = FALSE)
write.csv(edu_data,outname2)
outname2<-paste0('edu',fcode,'.csv')
write.csv(edu_data,outname2)
write.csv(edu_data,outname2,row.names = F)
edu_data_no_geom <- st_drop_geometry(edu_data)
write.csv(edu_data_no_geom,outname2)
source("~/work/jen/get_acs_variables.R")
setwd("~/work/Geog4254-5254G/lab2")
st_write(wui,'wui.shp',append='F')
